#+TITLE: 近期对技术方向的思考
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/style.css" />

Ruby On Rails的最新版本在2019年8月发布了，从各方的响应来看，RoR的热度明显降低了。

其实不只是RoR，其他相关web框架的热度都在下降，web开发界可能需要新的剧本了，比如web assembly。

回想某一年，苹果为了宣传macbook pro，专门请了RoR的创始团队做了一套视频广告，
在那个年代，macbook pro和RoR是很多互联网开发人员的梦想。

web2.0造就了一批伟大的公司和应用，足够多的经费和开发人员，使web框架本身的各种先进特性或架构
洁癖已经不再是最重要的问题。RoR们在杀死JAVA EE的同时，自己也遇到了JAVA EE相同的命运。

这些应用所面临的挑战，大部份是海量数据的请求处理和各种高可用问题，
只有少量公司还需要处理海量分布式一致性问题和分布式事务问题，自然在普通开发者中影响力一般。

反倒是这些应用产生的数据，让AI（是的，大数据的说法已经过时了）开始流行，很多人的关注点放到这些邻域。

太阳之下无新鲜事，Jeaf Dean 35岁跑到google时，他关于神经网络的博士论文恐怕不会为他增加多少
优势，Richard Stallman 70年代从MIT人工智能实验室出来搞GNU时，对AI的期望恐怕也不是很大，另一个
实验室的大拿Patrick Winston在2019年7月也去世了，他写的《人工智能》，这本开山著作，最新版出版时间是1992年。

人工智能的理论发展当然进步很快，但是运算能力的提升、海量数据的获取才是根本的驱动。工程上面，数值运算优化、并行处理当然是关键，
但也非AI潮流的开创。

我之前界限自己是互联网开发人员，但是如前述，这已经过时了，并且极大的束缚了我的技术乐趣，而新潮流，其实“过时”的更早。

这一年我深刻意识到，技术上我要重新找到乐趣和更大的价值，需要回到计算机最本质的东西——“计算”：

- 各种AI算法的数值计算开发，包括非云端环境。
- 分布式环境的一致性、事务计算实现，不是应用。
- 并行、并发计算的实现。

而这些支票如何兑现，就需要选择产品、业务场景了，这是另一个话题。
